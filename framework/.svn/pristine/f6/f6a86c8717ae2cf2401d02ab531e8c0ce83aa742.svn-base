<?php

/**
 * Created by PhpStorm.
 * User: tim
 * Date: 5/31/2015
 * Time: 1:15 AM
 */
class site_branchModel extends tableModelBase
{
    public function  __construct()
    {
        parent::__construct('site_branch');
    }

    /**
     * 添加branch
     * @param $p
     * @return result
     */
    public function addBranch($p)
    {
        $branch_code = trim($p['branch_code']);
        $branch_name = trim($p['branch_name']);
        $address_id = intval($p['address_id']);
        $address_region = trim($p['address_region']);
        $address_detail = trim($p['address_detail']);
        $contact_phone = trim($p['contact_phone']);
        $manager = intval($p['manager']);
        $status = intval($p['status']);
        if (empty($branch_code) || empty($branch_name)) {
            return new result(false, 'Code and name cannot be empty!');
        }
        $row = $this->newRow();
        $row->branch_code = $branch_code;
        $row->branch_name = $branch_name;
        $row->address_id = $address_id;
        $row->address_region = $address_region;
        $row->address_detail = $address_detail;
        $row->contact_phone = $contact_phone;
        $row->manager = $manager;
        $row->status = $status;
        $row->creator_id = intval($p['creator_id']);
        $row->creator_name = trim($p['creator_name']);
        $row->create_time = Now();
        $rt = $row->insert();
        if ($rt->STS) {
            return new result(true, 'Add successful!');
        } else {
            return new result(false, 'Add failed--' . $rt->MSG);
        }
    }

    /**
     * 编辑branch
     * @param $p
     * @return result
     * @throws Exception
     */
    public function editBranch($p)
    {
        $uid = intval($p['uid']);
        $branch_code = trim($p['branch_code']);
        $branch_name = trim($p['branch_name']);
        $address_id = intval($p['address_id']);
        $address_region = trim($p['address_region']);
        $address_detail = trim($p['address_detail']);
        $contact_phone = trim($p['contact_phone']);
        $manager = intval($p['manager']);
        $status = intval($p['status']);
        if (empty($branch_code) || empty($branch_name)) {
            return new result(false, 'Code and name cannot be empty!');
        }
        $row = $this->getRow(array('uid' => $uid));
        if (!$row) {
            return new result(false, 'Invalid Id');
        }
        $chk_code = $this->find(array('branch_code' => $branch_code, 'uid' => array('neq', $uid)));
        if ($chk_code) {
            return new result(false, 'Branch Code Exist!');
        }
        $row->branch_code = $branch_code;
        $row->branch_name = $branch_name;
        $row->address_id = $address_id;
        $row->address_region = $address_region;
        $row->address_detail = $address_detail;
        $row->contact_phone = $contact_phone;
        $row->manager = $manager;
        $row->status = $status;
        $row->update_time = Now();
        $rt = $row->update();
        if ($rt->STS) {
            return new result(true, 'Edit successful!');
        } else {
            return new result(false, 'Edit failed--' . $rt->MSG);
        }
    }

    /**
     * 删除branch
     * @param $uid
     * @return result
     * todo::判断是否可以删除
     */
    public function deleteBranch($uid)
    {
        $rt = $this->delete(array('uid' => $uid));
        if ($rt->STS) {
            return new result(true, 'Delete successful!');
        } else {
            return new result(false, 'Delete failed--' . $rt->MSG);
        }
    }
}
