<?php
/**
 * Created by PhpStorm.
 * User: sahara
 * Date: 2018/3/12
 * Time: 14:08
 */
class objectMemberClass extends objectBaseClass
{
    protected $member_id = null;
    protected $trading_password = null;

    public function __construct($member_id)
    {

        $this->_initObject($member_id);
    }

    public function checkValid()
    {
        // todo 检查合法性
        return true;
    }


    protected function _initObject($member_id)
    {
        $m = new memberModel();
        $member = $m->getRow($member_id);
        $this->object_id = $member['obj_guid'];
        $this->object_type = objGuidTypeEnum::CLIENT_MEMBER;
        $this->object_info = $member;
        $this->trading_password = $member['trading_password'];
        $this->member_id = $member->uid;
    }


    /** 验证交易密码
     * @param $input_pwd
     * @return bool
     */
    public function checkTradingPassword($input_pwd)
    {
        if( $this->trading_password && md5($input_pwd) != $this->trading_password  ){
            return false;
        }
        return true;
    }

    public function getSavingsPassbook()
    {
        return passbookClass::getSavingsPassbookOfMemberGUID($this->object_id);
    }

    /**
     * 获取储蓄账户余额
     * @return mixed
     */
    public function getSavingsAccountBalance()
    {
        $passbook = $this->getSavingsPassbook();
        $cny_balance = $passbook->getAccountBalance();
        return $cny_balance;
    }


    /** 储蓄账户提现
     * @param $amount
     * @param $currency
     * @param $handler_id
     * @param $remark
     * @param $trading_password
     * @return result
     */
    public function savingsRequestWithdraw($amount,$currency,$handler_id,$remark,$trading_password)
    {
        if( $amount <= 0 ){
            return new result(false,'Invalid amount',null,errorCodesEnum::INVALID_AMOUNT);
        }

        // 检查余额
        $cny_balance = $this->getSavingsAccountBalance();
        if( $cny_balance[$currency] < $amount ){
            return new result(false,'Balance not enough',null,errorCodesEnum::BALANCE_NOT_ENOUGH);
        }

        $handler_info = (new member_account_handlerModel())->getRow($handler_id);
        if( !$handler_info ){
            return new result(false,'Invalid param',null,errorCodesEnum::NO_ACCOUNT_HANDLER);
        }


        // todo 是否验证交易密码
        $m_biz = new biz_member_savings_withdrawModel();
        $new_row = $m_biz->newRow();
        $new_row->member_id = $this->member_id;
        $new_row->amount = $amount;
        $new_row->currency = $currency;
        $new_row->fee = 0;
        $new_row->remark = $remark;
        $new_row->handler_id = $handler_id;
        $new_row->state = withdrawStateEnum::CREATE;
        $new_row->create_time = Now();
        $insert = $new_row->insert();
        if( !$insert ){
            return new result(false,'Db error :'.$insert->MSG,null,errorCodesEnum::DB_ERROR);
        }

        if( $handler_info->handler_type == memberAccountHandlerTypeEnum::PARTNER_ASIAWEILUY ){

            $new_row->operator_id = 0;
            $new_row->operator_name = 'System';
            // 自动处理
            $conn = ormYo::Conn();
            try{

                $conn->startTransaction();

                // todo
                /*** 1. 储蓄账户扣钱  ***/
                /*** 2. ACE 转账给member  ***/

                $rt = new result(false);
                if( !$rt->STS ){
                    $new_row->state = withdrawStateEnum::FAIL;
                    $new_row->update_time = Now();
                    $new_row->update();
                    $conn->rollback();
                    return new result(false,'System handler fail',null,errorCodesEnum::API_FAILED);
                }else{
                    $new_row->state = withdrawStateEnum::DONE;
                    $new_row->update_time = Now();
                    $new_row->update();
                    $conn->submitTransaction();
                    return new result(true,'success');
                }

            }catch ( Exception $e){
                return new result(false,'Unknown error',null,errorCodesEnum::UNEXPECTED_DATA);
            }
        }else{

            // 后台处理
            return new result(true,'success');
        }

    }


    /** 储蓄账户存款
     * @param $amount
     * @param $currency
     * @param $handler_id
     * @param $remark
     * @return result
     */
    public function savingsRequestDeposit($amount,$currency,$handler_id,$remark)
    {
        if( $amount <= 0 ){
            return new result(false,'Invalid amount',null,errorCodesEnum::INVALID_AMOUNT);
        }
        $handler_info = (new member_account_handlerModel())->getRow($handler_id);
        if( !$handler_info ){
            return new result(false,'Invalid param',null,errorCodesEnum::NO_ACCOUNT_HANDLER);
        }

        $m_biz = new biz_member_savings_depositModel();
        $new_row = $m_biz->newRow();
        $new_row->member_id = $this->member_id;
        $new_row->amount = $amount;
        $new_row->currency = $currency;
        $new_row->fee = 0;
        $new_row->remark = $remark;
        $new_row->handler_id = $handler_id;
        $new_row->state = depositStateEnum::CREATE;
        $new_row->create_time = Now();
        $insert = $new_row->insert();
        if( !$insert ){
            return new result(false,'Db error :'.$insert->MSG,null,errorCodesEnum::DB_ERROR);
        }

        if( $handler_info->handler_type == memberAccountHandlerTypeEnum::PARTNER_ASIAWEILUY ){

            $new_row->operator_id = 0;
            $new_row->operator_name = 'System';
            // 自动处理
            $conn = ormYo::Conn();
            try{

                $conn->startTransaction();

                // todo
                /*** 1. 储蓄账户加钱  ***/
                /*** 2. ACE member账户扣钱  ***/

                $rt = new result(false);
                if( !$rt->STS ){
                    $new_row->state = depositStateEnum::FAIL;
                    $new_row->update_time = Now();
                    $new_row->update();
                    $conn->rollback();
                    return new result(false,'System handler fail',null,errorCodesEnum::API_FAILED);
                }else{
                    $new_row->state = depositStateEnum::DONE;
                    $new_row->update_time = Now();
                    $new_row->update();
                    $conn->submitTransaction();
                    return new result(true,'success');
                }

            }catch ( Exception $e){
                return new result(false,'Unknown error',null,errorCodesEnum::UNEXPECTED_DATA);
            }
        }else{

            // 后台处理
            return new result(true,'success');
        }

    }






}